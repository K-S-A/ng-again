"use strict";angular.module("ngTestApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngSanitize","ngTouch","ngFlash","ui.router"]).config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("root",{url:"/",templateUrl:"views/main.html",controller:"MainCtrl as vm"}).state("register",{url:"/registration",templateUrl:"views/register.html",controller:"RegisterCtrl as vm"}).state("about",{url:"/about",templateUrl:"views/about.html",controller:"AboutCtrl as vm"}),b.otherwise("/")}]).run(["$rootScope","$state","Config","cookieStore","Auth",function(a,b,c,d,e){a.$watch(function(){return e.token},function(a){a&&"register"===b.current.name&&b.go("root")}),e.updateHttpAuthHeader(d.get("token")),e.setCurrentUser(d.get("username"))}]),angular.module("ngTestApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("ngTestApp").controller("AboutCtrl",function(){var a=this;return a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a}),angular.module("ngTestApp").factory("Auth",["$http","cookieStore","Config",function(a,b,c){function d(a,b,c){i("register/",{username:a,password:b},c)}function e(a,b,c){i("login/",{username:a,password:b},c)}function f(a){j(),h(),"function"==typeof a&&a()}function g(b){return b?void(a.defaults.headers.common.Authorization="Token "+b):void delete a.defaults.headers.common.Authorization}function h(a){b.put("username",a),k.currentUser.username=a}function i(b,d,e){a.post(c.API_BASE_URL+b,d).then(function(a){a.data.success?(j(a.data.token),h(d.username)):(k.message=a.data.message,f()),"function"==typeof e&&e(a.data)})}function j(a){b.put("token",a),g(a),k.token=a}var k;return k={currentUser:{},token:b.get("token"),register:d,login:e,logout:f,updateHttpAuthHeader:g,setCurrentUser:h}}]),angular.module("ngTestApp").constant("Config",{API_BASE_URL:"https://smktesting.herokuapp.com/api/",COOKIE_NAMESPACE:"ngTestApp",MESSAGES:{ON_LOGIN:"Successfully logged in!",ON_LOGIN_ERROR:"Wrong user credentials. Check username/password and try again!",ON_REGISTER:"Successfully registered!",ON_REGISTER_ERROR:"Something go wrong. Check username/password and try again!",ON_LOGOUT:"Logged out!"}}),angular.module("ngTestApp").factory("cookieStore",["$cookieStore","Config",function(a,b){return{put:function(c,d){return a.put(b.COOKIE_NAMESPACE+"."+c,d)},get:function(c){return a.get(b.COOKIE_NAMESPACE+"."+c)}}}]),angular.module("ngTestApp").controller("LoginCtrl",["FlashProvider","Auth",function(a,b){var c=this;c.login=function(){c.loading=!0,b.login(c.username,c.password,function(b){c.loading=!1,b.success?(c.username=c.password=null,a.create("login")):a.create("loginError",b.message)})},c.logout=function(){b.logout(),a.create("logout")}}]),angular.module("ngTestApp").controller("RegisterCtrl",["$state","FlashProvider","Auth",function(a,b,c){var d=this;d.register=function(){d.loading=!0,c.register(d.username,d.password,function(c){d.loading=!1,c.success?(a.go("root"),b.create("register")):b.create("registerError",c.message)})}}]),angular.module("ngTestApp").directive("registrationNav",["Auth",function(a){return{template:'<a ui-sref="register">Registration</a>',restrict:"A",link:function(b,c){b.$watch(function(){return a.token},function(a){a?c.hide():c.show()})}}}]),angular.module("ngTestApp").directive("loginNav",["Auth",function(a){return{templateUrl:"views/auth/nav-login.html",controller:"LoginCtrl as vm",restrict:"A",link:function(b,c){b.$watch(function(){return a.token},function(a){a?c.hide():(b.form.$setPristine(),c.show())})}}}]),angular.module("ngTestApp").directive("logoutNav",["Auth",function(a){return{templateUrl:"views/auth/nav-logout.html",restrict:"A",link:function(b,c){b.$watch(function(){return a.token},function(d){d?(b.vm.username=a.currentUser.username,c.show()):(b.vm.username=null,c.hide())})}}}]),angular.module("ngTestApp").factory("FlashProvider",["Config","Flash",function(a,b){function c(a,c){b.clear(),b.create(a,c)}var d=this;return d._login=function(b){c("success",b||a.MESSAGES.ON_LOGIN)},d._loginError=function(b){c("danger",b||a.MESSAGES.ON_LOGIN_ERROR)},d._register=function(b){c("success",b||a.MESSAGES.ON_REGISTER)},d._registerError=function(b){c("danger",b||a.MESSAGES.ON_REGISTER_ERROR)},d._logout=function(b){c("success",b||a.MESSAGES.ON_LOGOUT)},{create:function(a,b){return d["_"+a](b)}}}]),angular.module("ngTestApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/auth/nav-login.html",'<a href="" class="dropdown-toggle" data-toggle="dropdown"><b>Login</b> <span class="caret"></span></a> <ul style="padding: 14px 14px 0" class="dropdown-menu"> <li> <div class="row" style="min-width: 200px"> <div class="col-md-12"> <form id="form" name="form" role="form" ng-submit="vm.login()"> <div class="form-group" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"> <label for="username" class="sr-only">Username</label> <input type="text" class="form-control" name="username" id="username" ng-model="vm.username" placeholder="Username..." required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span> </div> <div class="form-group" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"> <label for="password" class="sr-only">Username</label> <input type="password" class="form-control" name="password" id="password" ng-model="vm.password" placeholder="Password..." required> <span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span> </div> <div class="form-group"> <button type="submit" class="btn btn-primary btn-block" ng-disabled="form.$invalid || vm.loading">Sign in</button> </div> </form> <p class="small"> New user? Visit <a ui-sref="register">registration</a> page to create new account. </p> </div> </div> </li> </ul>'),a.put("views/auth/nav-logout.html",'<a href="" class="dropdown-toggle" data-toggle="dropdown"> <span class="glyphicon glyphicon-user"></span> <b>"{{ vm.username }}"</b> <span class="caret"></span> </a> <ul class="dropdown-menu"> <li> <a ng-click="vm.logout()" ui-sref="root">Logout<span class="glyphicon glyphicon-log-out pull-right"></span></a> </li> </ul>'),a.put("views/main.html",'{{vm.awesomeThings}} <div ui-view="login"></div> <div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="images/yeoman.8cb970fb.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/register.html",'<div class="row"> <div class="col-md-6 col-md-offset-3"> <form id="form" name="form" role="form" ng-submit="vm.register()"> <div class="form-group" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"> <label for="username" class="sr-only">Username</label> <input type="text" class="form-control" name="username" id="username" ng-model="vm.username" placeholder="Username..." required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span> </div> <div class="form-group" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"> <label for="password" class="sr-only">Username</label> <input type="password" class="form-control" name="password" id="password" ng-model="vm.password" placeholder="Password..." required> <span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span> </div> <div class="form-group"> <button type="submit" class="btn btn-primary btn-block" ng-disabled="form.$invalid || vm.loading">Register</button> <button type="button" class="btn btn-default btn-block" ui-sref="root">Cancel</button> </div> </form> </div> </div>')}]);